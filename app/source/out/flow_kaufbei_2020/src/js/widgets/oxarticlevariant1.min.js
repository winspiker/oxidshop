/**
 *    This file is part of OXID eShop Community Edition.
 *
 *    OXID eShop Community Edition is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    OXID eShop Community Edition is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with OXID eShop Community Edition.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @link      http://www.oxid-esales.com
 * @package   out
 * @copyright (C) OXID eSales AG 2003-2016
 * @version OXID eShop CE
 * @version   SVN: $Id: oxarticlevariant.js 35529 2011-05-23 07:31:20Z vilma $
 */
( function ( $ ) {

    var oxArticleVariant = {

        /**
         * Initiating article variants selector
         * @private
         */
        _create: function() {
            $("ul.vardrop a").click( variantSelectActionHandler );
            $('div.variantReset a').click( variantResetActionHandler );

            $("form.js-oxWidgetReload").submit( formSubmit );
            $("form.js-oxProductForm").submit( formSubmit );
        },

        /**
         * Reloads block
         *
         * @param activator
         * @param highlightTargets
         * @param contentTarget
         * @param aOptions
         * @returns {boolean}
         */
        reload: function(activator, highlightTargets, contentTarget, aOptions) {
            preAjaxCaller();
            oxAjax.ajax(
                activator, {//targetEl, onSuccess, onError, additionalData
                    'targetEl'  : highlightTargets,
                    'iconPosEl' : $("#variants .dropDown"),
                    'additionalData' : aOptions,
                    'onSuccess' : function(r) {
                        $( contentTarget ).parent().html( r );

                        $('#details_container').trigger('changeVariantUri.exonn');


                        $('.custom-variants').show();

                        $('.custom-variants').html('');

                        $('#variants .selectbox').each(function() {
                            var thisSelectbox = $(this);
                            $('.custom-variants').append('<div class="custom-variants--label">'+thisSelectbox.find('.variant-label').html()+'</div><div class="custom-variants--list"><ul>'+thisSelectbox.find('ul').html()+'</ul></div>');
                        });



                        $('.custom-variants').find('.custom-variants--list a').each(function() {
                            console.log($(this).attr('data-selection-id'));
                            if(!$(this).attr('data-selection-id')) {
                                $(this).parent().remove();
                            }
                        });

                        console.log('reload');
                        document.counterPrice();
                        $('iframe[src*="youtube.com"], object')
                            .not(".noresize")
                            .wrap(
                                '<div id="video" class="block-videocontainer"><div class="videocontainer-wrapper"><div class="videocontainer"></div></div></div>'
                            );


                        if (!document.getElementsByClassName) {
                            // Поддержка IE8
                            var getElementsByClassName = function(node, classname) {
                                var a = [];
                                var re = new RegExp('(^| )'+classname+'( |$)');
                                var els = node.getElementsByTagName("*");
                                for(var i=0,j=els.length; i < j; i++)
                                    if(re.test(els[i].className))a.push(els[i]);
                                return a;
                            }
                            var videos = getElementsByClassName(document.body,"youtube-iframe");
                        } else {
                            var videos = document.getElementsByClassName("youtube-iframe");
                        }

                        var nb_videos = videos.length;
                        for (var i=0; i < nb_videos; i++) {
                            // Находим постер для видео, зная ID нашего видео
                            var thumbUrl = 'https://i.ytimg.com/vi/' + videos[i].id.replaceAll(' ', '') + '/hqdefault.jpg';
                            getMeta(thumbUrl, videos[i].id);
                            videos[i].style.backgroundImage = 'url(' + thumbUrl + ')';

                            // Размещаем над постером кнопку Play, чтобы создать эффект плеера
                            var play = document.createElement("div");
                            play.setAttribute("class","play");
                            videos[i].appendChild(play);

                            videos[i].onclick = function() {
                                // Создаем iFrame и сразу начинаем проигрывать видео, т.е. атрибут autoplay у видео в значении 1
                                var iframe = document.createElement("iframe");
                                var iframe_url = "https://www.youtube.com/embed/" + this.id + "?autoplay=1&autohide=1";
                                if (this.getAttribute("data-params")) iframe_url+='&'+this.getAttribute("data-params");
                                iframe.setAttribute("src",iframe_url);
                                iframe.setAttribute("frameborder",'0');

                                // Высота и ширина iFrame будет как у элемента-родителя
                                iframe.style.width  = this.style.width;
                                iframe.style.height = this.style.height;

                                // Заменяем начальное изображение (постер) на iFrame
                                this.parentNode.replaceChild(iframe, this);


                            }
                        }

                        var mySwiper = new Swiper ('.swiper-product-carousel', {

                            slidesPerView: 7,
                            spaceBetween: 0,
                            // pagination: {
                            // el: '.swiper-pagination',
                            // clickable: true,
                            // },
                            scrollbar: {
                                el: ".swiper-scrollbar",
                                hide: true,
                            },
                            navigation: {
                                nextEl: '.swiper-button-next',
                                prevEl: '.swiper-button-prev',
                            },
                            loop: false,
                            breakpoints: {
                                0: {
                                    slidesPerView: 2,
                                },
                                250: {
                                    slidesPerView: 2,
                                },
                                500: {
                                    slidesPerView: 3,
                                },
                                750: {
                                    slidesPerView: 4,
                                },
                                1000: {
                                    slidesPerView: 5,
                                },
                                1250: {
                                    slidesPerView: 6,
                                },
                                1500: {
                                    slidesPerView: 7,
                                }
                            }
                        });

                        var swiperMulti = new Swiper(".swiper--main-product--thumbs", {
                            spaceBetween: 10,
                            slidesPerView: 6,
                            // freeMode: true,
                            watchSlidesVisibility: true,
                            watchSlidesProgress: true,
                            navigation: {
                                nextEl: '.swiper-button-next',
                                prevEl: '.swiper-button-prev',
                            },
                            breakpoints: {
                                0: {
                                    slidesPerView: 3,
                                },
                                500: {
                                    slidesPerView: 4,
                                },
                                750: {
                                    slidesPerView: 6,
                                }
                            }
                        });
                        var swiperMulti2 = new Swiper(".swiper--main-product--carousel", {
                            spaceBetween: 10,
                            navigation: {
                                nextEl: ".swiper-button-next",
                                prevEl: ".swiper-button-prev",
                            },
                            thumbs: {
                                swiper: swiperMulti,
                            },
                        });

                        if ( typeof WidgetsHandler !== 'undefined') {
                            WidgetsHandler.reloadWidget('oxwarticledetails');
                            WidgetsHandler.reloadWidget('oxwrating');
                            WidgetsHandler.reloadWidget('oxwreview');
                            document.counterPrice();


                        }
                    }
                }
            );
            return false;
        },

        /**
         * Resets all variant selections
         */
        resetVariantSelections: function() {
            resetVariantSelections();
        }
    }

    /**
     * Handles variant selection action
     * @returns {boolean}
     */
    function variantSelectActionHandler( e ) {
        var obj = $( this );
        // resetting
        if ( obj.parents().hasClass("js-disabled") ) {
            resetVariantSelections();
        } else {
            $( "form.js-oxProductForm input[name=anid]" ).attr( "value", $( "form.js-oxProductForm input[name=parentid]" ).attr( "value" ) );
        }

        // setting new selection
        if ( obj.parents('.js-fnSubmit').length > 0 ) {
            $('input:hidden', obj.parents('div.dropDown')).val( obj.data("selection-id") );

            var form = $("form.js-oxWidgetReload");
            $('input[name=fnc]', form).val("");
            form.submit();
        }
        return false;
    }

    /**
     * Handles variant reset action
     * @returns {boolean}
     */
    function variantResetActionHandler( e ) {
        resetVariantSelections();
        var form = $("form.js-oxWidgetReload");
        $('input[name=fnc]', form).val("");
        form.submit();
        return false;
    }

    /**
     * Resets variant selections
     */
    function resetVariantSelections() {
        var aVarSelections = $( "form.js-oxProductForm input[name^=varselid], form.js-oxWidgetReload input[name^=varselid]" );
        for (var i = 0; i < aVarSelections.length; i++) {
            $( aVarSelections[i] ).attr( "value", "" );
        }
        $( "form.js-oxProductForm input[name=anid]" ).attr( "value", $( "form.js-oxProductForm input[name=parentid]" ).attr( "value" ) );
    }

    /**
     * Handles form submit
     *
     * @returns {*}
     */
    function  formSubmit() {
        var aOptions = {}, target = $(this);

        if (!$("input[name='fnc']", this).val()) {
            if (($( "input[name=aid]", this ).val() == $( "input[name=parentid]", this ).val() )) {
                var aSelectionInputs = $("input[name^=varselid]", $("form.js-oxProductForm"));
                if (aSelectionInputs.length) {
                    var sHash = '';
                    aSelectionInputs.each(function(i) {
                        sHash = sHash+i+':'+$(this).val()+"|";
                        aOptions[$(this).attr( "name" )] = $(this).val();
                    });
                    if ( jQuery.inArray( sHash, oxVariantSelections ) === -1 ) {
                        return oxArticleVariant.reload( $(target), $("#details_container"), $("#details_container")[0], aOptions);
                    }
                }
            }
            return oxArticleVariant.reload( $(target),$("#details_container"),$("#details_container")[0], aOptions);
        }


    }

    /**
     * Runs defined scripts inside the method, before ajax is called
     */
    function preAjaxCaller() {
        $('#zoomModal').remove();
    }

    $.widget("ui.oxArticleVariant", oxArticleVariant );

})( jQuery );